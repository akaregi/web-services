version: "3.8"

services:
  traefik:
    image: traefik:vacherin
    container_name: traefik
    restart: always
    ports:
      - 80:80
      - 443:443
      - 8082:8082
      - 8080:8080
    networks:
      - shared

    # traefik
    command:
      # provider
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false

      # dashboard
      - --api=true
      - --api.dashboard=true

      # Log
      - --log.filepath=/var/log/traefik/traefik.json
      - --log.format=json

      # Access Log
      - --accesslog=true
      - --accesslog.filepath=/var/log/traefik/access.json
      - --accesslog.format=json

      # entry points
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https

      # For HTTPS
      - --entrypoints.websecure.address=:443

      # For Prometheus / Grafana
      - --entrypoints.metrics.address=8082

      # Metrics (Prometheus)
      - --metrics.prometheus=true
      - --metrics.prometheus.entrypoint=metrics
      - --metrics.prometheus.addRoutersLabels=true

      # Certificate
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email=${CA_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.keyType=EC384

    labels:
      # casting a spell
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.azure.icu`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.middlewares=auth
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls.certresolver=letsencrypt
      - traefik.http.middlewares.auth.digestauth.users=${DASHBOARD_ADMIN}

    # env
    environment:
      - CLOUDFLARE_EMAIL=${CF_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${CF_TOKEN}

    # volume
    volumes:
      - ./letsencrypt:/letsencrypt
      - ./logs:/var/log/traefik
      - ${DOCKER_SOCK}:/var/run/docker.sock:ro

networks:
  shared:
    name: shared
